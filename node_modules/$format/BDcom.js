/*
"howtoplay": " https://docs.google.com/document/d/19AXmm7jye2jXNUwLg3eLUjZlDX2jSxhyU62NRei2c8c/",
  "htp": "https://docs.google.com/document/d/19AXmm7jye2jXNUwLg3eLUjZlDX2jSxhyU62NRei2c8c/",

  "hostguide": "https://docs.google.com/document/d/1wlfc8RIZLHV6wIpuv_3YdH_r48mI9OX7cctyoLSRjh0/edit",
  "home": "https://docs.google.com/spreadsheets/d/1-x_Ffgn3noxmNB5_Em-mIpMECv3Kftf1QzLVZFcxgVY/edit#gid=0",

*/

module.exports =  {

	glue: function(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13){
		if (arg1 === undefined || arg1 === '') arg1 = ' ';
		if (arg2 === undefined || arg2 === '') arg2 = ' ';
		if (arg3 === undefined || arg3 === '') arg3 = ' ';
		if (arg4 === undefined || arg4 === '') arg4 = ' ';
		if (arg5 === undefined || arg5 === '') arg5 = ' ';
		if (arg6 === undefined || arg6 === '') arg6 = ' ';
		if (arg7 === undefined || arg7 === '') arg7 = ' ';
		if (arg8 === undefined || arg8 === '') arg8 = ' ';
		if (arg9 === undefined || arg9 === '') arg9 = ' ';
		if (arg10 === undefined || arg10 === '') arg10 = ' ';
		if (arg11 === undefined || arg11 === '') arg11 = ' ';
		var result = arg1 + ',' + arg2 + ',' + arg3 + ',' + arg4 + ',' + arg5 + ',' + arg6 + ',' + arg7 + ',' + arg8 + ',' + arg9 + ',' + arg10 + ',' + arg11;
		return result;
	},

	glue2: function(arg1, arg2, arg3, arg4, arg5){
		if (arg1 === undefined || arg1 === '') arg1 = ' ';
		if (arg2 === undefined || arg2 === '') arg2 = ' ';
		if (arg3 === undefined || arg3 === '') arg3 = ' ';
		if (arg4 === undefined || arg4 === '') arg4 = ' ';
		if (arg5 === undefined || arg5 === '') arg5 = ' ';
		var result = arg1 + '|' + arg2 + '|' + arg3 + '|' + arg4 + '|' + arg5;
		return result;
	},

	squadpairing: function(array, tar){
		var check = '';
		var squad = '';
		for (var key1 in array){
			var raw1 = array[key1];
			var props1 = raw1.split(',');
			if (props1[1] !== ' '){
				if (toId(props1[1]) === tar){
	 				check = 'Found';
	 				squad = 'omega';
	 			}
			}		
			if (check === 'Found'){
	 			break;
	 		}
	 	}
	 	if (check !== 'Found'){
	 		for (var key2 in array){
	 			var raw2 = array[key2];
	 			var props2 = raw2.split(',');
	 			if (props2[1] === " "){
	 				check = 'Found';
	 				squad = props2[0];
	 			}
	 			if (check === 'Found'){
	 				break;
	 			}
	 		}
	 	}
	 	return squad;
	},

	pairingw: function(array, tar, squad){
		for (var key in array){
			var raw = array[key];
			var props = raw.split(',');
			if (props[0] === squad){
				props[1] = tar;
				array[key] = props[0] + ',' + props[1];
				return array;
			}
		}
		return array;
	},

	pairlu: function(array, tar){
		var squad = '';
		for (var key in array){
			var raw = array[key];
			var props = raw.split(',');
			if (toId(props[1]) === tar){
				squad = props[0];
				return squad;
			}
		}
	},

	bpass: function(array, arg){
		var squad = '';
		for (var key in array){
			var raw = array[key];
			var props = raw.split(',');
			if (toId(props[1]) === toId(arg)){
				squad = props[0];
				return squad;
			}
		}
	},

	bpassw: function(array, arg, squad){
		for (var key in array){
			var raw = array[key];
			var props = raw.split(',');
			if (props[0] === squad){
				props[1] = toId(arg);
				array[key] = props[0] + ',' + props[1];
				return array;
			}
		}
		return array;
	},

	makePL: function(obj){
		var text = '';
		var check = '';
		for (var key in obj){
				if (obj.hasOwnProperty(key)){
	 				var raw = obj[key];
	 				var props = raw.split(',');
	 				var status = props[11].split('|');
					if (props[0] !== ' '){
	 					var result = '**' + props[0] + ' ' + props[2] + '/' + props[3];
	 					text += result;
	 					for (var n in status){
	 						if (status[n] !== ' '){
	 							check = 'Found';
	 						}
	 						if (check == 'Found') break;
	 					}
	 					if (check == 'Found'){
	 						text += " (/";
	 						for (var m in status){
	 							if (status[m] !== ' '){
	 								text += status[m] + '/';
	 							}
	 						}
	 						text += ")";
	 					}
	 					text += '** || ';
	 				}
	 			}
 			}
 			return text;
	},

	getchar: function(obj, arg){
		for (var key in obj){
			if (obj.hasOwnProperty){
				var raw = obj[key];
				var props = raw.split(',');
				if (toId(props[0]) === arg && props[1] === 'players'){
					return obj[key];
				}
			}
		}

	},

	getkey: function(obj, arg){
		for (var key in obj){
			if (obj.hasOwnProperty){
				var raw  = obj[key];
				var props = raw.split(',');
				if (toId(props[0]) === arg){
					return key;
				}
			}
		}
	},

	displaystat: function(string){
		var check = '';
		var props = string.split(',');
		var result = "**" + props[0] + "** ``" + props[2] + '/' + props[3];
		var status = props[10].split('|');
	 		for (var n in status){
	 			if (status[n] !== ' '){
	 				check = 'Found';
	 			}
	 			if (check == 'Found') break;
	 		}
	 		if (check == 'Found'){
	 			result += " ``(/";
	 			for (var m in status){
	 				if (status[m] !== ' '){
	 					result += status[m] + '/';
	 				}
	 			}
	 			result += ")``";
	 		}
		result += " | **Defense**: ``" + props[4] + '/' + props[5] + "`` | **P/D/M**: ``" + props[6] + '/' + props[7] + '/' + props[8] + "`` | **Speed**: ``" + props[9] + "``";
		return result;
	},

	aoe: function(obj, tar, val){
		for (var key in obj){
	 		if (obj.hasOwnProperty(key)){
	 			var raw = obj[key];
	 			var props = raw.split(',');
	 			if (toId(props[1]) === tar){
	 				props[2] = Number(props[2]) + Number(val);
	 				var string = '';
	 				for (var n in props){
	 					string += props[n] + ',';
	 				}
	 				obj[key] = string.substring(0, string.length - 1);
	 			}
	 		}
	 	}
	 	return obj;
	},

	roll: function(dice, sides, val, bomb){
		function sum(a,b){
			return Number(a)+Number(b);
		}
		var rolls = [];
		for (var count = 0; count < dice; count++ ){
			rolls[count] = Math.floor((Math.random()*sides + 1));
			if (bomb === 'bomb' && rolls[count] >= Math.ceil(sides/4)){
				dice++;
			}
		}
		var text = "Rolls: " + rolls;
		var total = rolls.reduce(sum, val);
		text += " **||** Total: " + total;
		return text;
	},

	init: function(obj){
		var m = 0; //total
		var n = 0; //entities
		var storeobj = {}; //intermediate obj
		var obj2 = {}; //return obj
		var count = 0;
		for (m in obj){
			if (obj.hasOwnProperty){
				var raw = obj[m];
				var props = raw.split(',');
				if (props[1] !== ' '){
					storeobj[n] = obj[m];
					n++;
				}
			}
		}
		var arrayobj = {"0": [], "1": [], "2": [], "3": [], "4": [], "5": [], "6": [], "7": [], "8": [], "9": [], "10": [], "11": [], "12": [], "13": []};
		for (var speed = 13; speed > 0; speed--){
			for (var key in storeobj){
				if (storeobj.hasOwnProperty){
					var raw = storeobj[key];
					var props = raw.split(',');
					if (Number(props[9]) === speed){
						arrayobj[speed].push(storeobj[key]);
					}
				}
			}
		}
		for (var key1 in arrayobj){
			if (arrayobj.hasOwnProperty){
				arrayobj[key1] = arrayobj[key1].sort();
			}
		}
		for (var speed = 13; speed > -1; speed--){
			if (arrayobj[speed].length > 0){
				var speedtier = arrayobj[speed];
				for (var key2 in speedtier){
					obj2[count] = speedtier[key2];
					count++;
				}
			}
		}
		while (count <= m){
			obj2[count] = " , , , , , , , , , , ";
			count++;
		}
		return obj2;
	},

	//Monster Gen switches
	gennovice: function(players){
		var rdn = Math.floor((Math.random()*5+1));
		var result = '';
		var num = Number(players);

		if (num === 3){
			switch(rdn){
				case 1:
					result = "http://pastebin.com/raw/wM2xqewv";
					return result;
				case 2:
					result = "http://pastebin.com/raw/4mpMGuSU";
					return result;
				case 3:
					result = "http://pastebin.com/raw/eBB74gcv";
					return result;
				case 4:
					result = "http://pastebin.com/raw/qYD0dTBB";
					return result;
				case 5:
					result = "http://pastebin.com/raw/Dn56RcSV";
					return result;
			}
		}
		else if (num === 4){
			switch(rdn){
				case 1:
					result = "http://pastebin.com/raw/6pMHwpmj";
					return result;
				case 2:
					result = "http://pastebin.com/raw/d7yqUJq4";
					return result;
				case 3:
					result = "http://pastebin.com/raw/zDi8ZRwq";
					return result;
				case 4:
					result = "http://pastebin.com/raw/CQtMu29v";
					return result;
				case 5:
					result = "http://pastebin.com/raw/QWw3Rpbc";
					return result;
			}

		}
		else if (num === 5){
			switch(rdn){
				case 1:
					result = "http://pastebin.com/raw/SZDsVe1U";
					return result;
				case 2:
					result = "http://pastebin.com/raw/jPcDaz08";
					return result;
				case 3:
					result = "http://pastebin.com/raw/BHLZtMg3";
					return result;
				case 4:
					result = "http://pastebin.com/raw/ES0suyX8";
					return result;
				case 5:
					result = "http://pastebin.com/raw/3tNhvY92";
					return result;
			}
		}
	},
	genbasic: function(players){
		var rdn = Math.floor((Math.random()*5+1));
		var result = '';
		var num = Number(players);

		if (num === 3){
			switch(rdn){
				case 1:
					result = "http://pastebin.com/raw/vyLJEWG7";
					return result;
				case 2:
					result = "http://pastebin.com/raw/rRRecGfU";
					return result;
				case 3:
					result = "http://pastebin.com/raw/kmgFvgzw";
					return result;
				case 4:
					result = "http://pastebin.com/raw/nwZfZmkJ";
					return result;
				case 5:
					result = "http://pastebin.com/raw/xp7chUfX";
					return result;
			}
		}
		else if (num === 4){
			switch(rdn){
				case 1:
					result = "http://pastebin.com/raw/n0m8pWkS";
					return result;
				case 2:
					result = "http://pastebin.com/raw/aZQQMJu0";
					return result;
				case 3:
					result = "http://pastebin.com/raw/SuMvQsmU";
					return result;
				case 4:
					result = "http://pastebin.com/raw/YWcbA1QN";
					return result;
				case 5:
					result = "http://pastebin.com/raw/Y598y86d";
					return result;
			}

		}
		else if (num === 5){
			switch(rdn){
				case 1:
					result = "http://pastebin.com/raw/TMeUFADJ";
					return result;
				case 2:
					result = "http://pastebin.com/raw/9Fy7Wdq9";
					return result;
				case 3:
					result = "http://pastebin.com/raw/dkWFFsxS";
					return result;
				case 4:
					result = "http://pastebin.com/raw/k5PLaJsm";
					return result;
				case 5:
					result = "http://pastebin.com/raw/CQUDsipJ";
					return result;
			}
		}
	},
	genadept: function(players){
		var rdn = Math.floor((Math.random()*5+1));
		var result = '';
		var num = Number(players);

		if (num === 3){
			switch(rdn){
				case 1:
					result = "http://hastebin.com/raw/jifehifogu";
					return result;
				case 2:
					result = "http://hastebin.com/raw/hilovegave";
					return result;
				case 3:
					result = "http://hastebin.com/raw/liwowutoki";
					return result;
				case 4:
					result = "http://hastebin.com/raw/ikimilexaz";
					return result;
				case 5:
					result = "http://hastebin.com/raw/hawuribuqe";
					return result;
			}
		}
		else if (num === 4){
			switch(rdn){
				case 1:
					result = "http://hastebin.com/raw/napetogede";
					return result;
				case 2:
					result = "http://hastebin.com/raw/coyaragami";
					return result;
				case 3:
					result = "http://hastebin.com/raw/zagibicefe";
					return result;
				case 4:
					result = "http://hastebin.com/raw/izorusoviq";
					return result;
				case 5:
					result = "http://hastebin.com/raw/mimagerahu";
					return result;
			}

		}
		else if (num === 5){
			switch(rdn){
				case 1:
					result = "http://hastebin.com/raw/afodesehoc";
					return result;
				case 2:
					result = "http://hastebin.com/raw/ofucalaheb";
					return result;
				case 3:
					result = "http://hastebin.com/raw/rerejetele";
					return result;
				case 4:
					result = "http://hastebin.com/raw/yorafecase";
					return result;
				case 5:
					result = "http://hastebin.com/raw/bogerivita";
					return result;
			}
		}
	},
	genadvanced: function(players){
		var rdn = Math.floor((Math.random()*4+1));
		var result = '';
		var num = Number(players);

		if (num === 3){
			switch(rdn){
				case 1:
					result = "http://hastebin.com/raw/hegagatusu";
					return result;
				case 2:
					result = "http://hastebin.com/raw/mesazonepu";
					return result;
				case 3:
					result = "http://hastebin.com/raw/jesovuqaco";
					return result;
				case 4:
					result = "http://hastebin.com/raw/pehotayoxo";
					return result;
			}
		}
		else if (num === 4){
			switch(rdn){
				case 1:
					result = "http://hastebin.com/raw/uyiqosodur";
					return result;
				case 2:
					result = "http://hastebin.com/raw/halokuzari";
					return result;
				case 3:
					result = "http://hastebin.com/raw/sexagomero";
					return result;
				case 4:
					result = "http://hastebin.com/raw/olorepegok";
					return result;
			}

		}
		else if (num === 5){
			switch(rdn){
				case 1:
					result = "http://hastebin.com/raw/qojeropalu";
					return result;
				case 2:
					result = "http://hastebin.com/raw/xonocigehi";
					return result;
				case 3:
					result = "http://hastebin.com/raw/lotarivelu";
					return result;
				case 4:
					result = "http://hastebin.com/raw/fetayifeje";
					return result;
			}
		}
	},
	genexpert: function(players){
		var result = '';
		var num = Number(players);

		if (num === 3){
			var rdn = Math.floor((Math.random()*5+1));
			switch(rdn){
				case 1:
					result = "http://pastebin.com/raw/ePGbYjLs"; //Fire Drag
					return result;
				case 2:
					result = "http://pastebin.com/raw/B8kA07QD"; //Corrupted Dryad Faun
					return result;
				case 3:
					result = "http://pastebin.com/raw/NX3NtHpj"; //Shadow Golem
					return result;
				case 4:
					result = "http://pastebin.com/raw/h9wDSXkT"; // Cultist Child
					return result;
				case 5:
					result = "http://hastebin.com/raw/evilidexem"; //Exo
					return result;
			}
		}
		else if (num === 4){
			var rdn = Math.floor((Math.random()*5+1));
			switch(rdn){
				case 1:
					result = "http://pastebin.com/raw/4PqtBQPQ"; //Fire Drag
					return result;
				case 2:
					result = "http://pastebin.com/raw/mRHXsWfd"; //Corrupted Dryad Faun
					return result;
				case 3:
					result = "http://pastebin.com/raw/mZbjEfXg"; //Shadow Golem
					return result;
				case 4:
					result = "http://pastebin.com/raw/Ptk8trHu"; //Cultist child
					return result;
				case 5:
					result = "http://hastebin.com/raw/ijohifuwif"; //Exo
					return result;
			}

		}
		else if (num === 5){
			var rdn = Math.floor((Math.random()*4+1));
			switch(rdn){
				case 1:
					result = "http://pastebin.com/raw/PgcFn7Bi"; //Fire Drag
					return result;
				case 2:
					result = "http://pastebin.com/raw/BdcwTJNQ"; //Corrupted Dryad Faun
					return result;
				case 3:
					result = "http://pastebin.com/raw/Sqk45cvk"; //Shadow Golem
					return result;
				case 4:
					result = "http://pastebin.com/raw/Mr8MzUfH"; //Cultist child
					return result;
			}
		}
	},
	genbrutal: function(players){
		var result = '';
		var num = Number(players);
		var rdn = Math.floor((Math.random()*5+1));

		if (num === 3){
			switch(rdn){
				case 1:
					result = "";
					return result;
				case 2:
					result = "";
					return result;
				case 3:
					result = "";
					return result;
				case 4:
					result = "";
					return result;
				case 5:
					result = "";
					return result;
			}
		}
		else if (num === 4){
			switch(rdn){
				case 1:
					result = "";
					return result;
				case 2:
					result = "";
					return result;
				case 3:
					result = "";
					return result;
				case 4:
					result = "";
					return result;
				case 5:
					result = "";
					return result;
			}

		}
		else if (num === 5){
			switch(rdn){
				case 1:
					result = "";
					return result;
				case 2:
					result = "";
					return result;
				case 3:
					result = "";
					return result;
				case 4:
					result = "";
					return result;
				case 5:
					result = "";
					return result;
			}
		}
	},
}