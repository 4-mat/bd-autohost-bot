const { json2html } = require('html2json');

module.exports =  {

    uhtmlnotif: function(data, room){
		//utml stuff 

		var now = new Date(Date.now());
		let uhtml = require('origindb')('uhtml');
        if (data.includes('/uhtml wt')){
            uhtml('uhtmldata').set('lastWT', now + " " + data);
            var userName = '4mat'; let title = 'BDgamedebug';
		    let htmlpageIntro = `/sendhtmlpage ${userName}, ${title}`;

		    let contents = ''; 
		    contents = uhtml('uhtmldata').get('lastWT');

		    let returnStatement = `${htmlpageIntro}, ${contents}`;
            return returnStatement;
        }
        if (data.includes('playerdata')){
            uhtml('uhtmldata').set('votingStage', data);
        }
		uhtml('uhtmldata').set('lastUHTMLmessage', now + " " + data);
        // time to digest the html 
        try {
            let turnorder = data.split('Turn Order: ')[1].split('</b>')[0].replaceAll(' ','').split(',');
            uhtml('uhtmldata').set('lastTurnOrder', turnorder);
        } catch (e) {
            error('no map lol');
        }       
        let playerDataArray = ""; uhtml('uhtmldata').set('playerPosition', "");
        if(data.includes('<summary>Map</summary>')){
            uhtml('uhtmldata').set('lastINFO', now + " " + data);
            const myArray = data.split(">");
            let pass; let mapText = []; let columnCount = 0; let elementCount = 0; let rowCount = 0;
            for (let i = 0; i < myArray.length; i++) {
                const element = myArray[i];
                let playerPositionArray = []; 
                if (element.includes('</b')){
                    pass = element.split("</")
                    if (pass[0].includes("P")){
                        console.log("LOOK HERE: " + pass[0] + " Position: " + elementCount + ", " + rowCount);
                        let entry = pass[0] + " Position: " + String.fromCharCode(65 + rowCount) + ", " + elementCount;
                        if (elementCount === 0){
                            elementCount = columnCount;
                            let fakeRowCount = rowCount - 1;
                            entry = pass[0] + " Position: " + String.fromCharCode(65 + fakeRowCount) + ", " + elementCount;
                        }
                        let playerPositionBefore = uhtml('uhtmldata').get('playerPosition');
                        playerPositionArray = playerPositionBefore + " " + entry;
                        uhtml('uhtmldata').set('playerPosition', playerPositionArray);
                    } else if (!isNaN(pass[0])){
                        if (!(pass[0] === "  " || pass[0] === " ") ) {
                            columnCount++; 
                            console.log('this is it' + pass[0]);
                        }
                    } 
                }
                if (element.includes('title')){
                    pass = element.split('title=');
                    if(pass[1].includes('align="center"')){pass[1] = pass[1].replace(' align="center"','');}
                    pass[1] = pass[1].slice(0, -1);
                    mapText += pass[1].replace('"','');
                    mapText += ", ";
                    elementCount++;
                }
                // if P then do stuff
                if (elementCount === columnCount && columnCount !== 0){
                    mapText += '\r\n';
                    elementCount = 0;
                    rowCount++;
                }
                if (element.includes("Player Data")){
                    //playerdata time !
                    playerDataArray = myArray.slice(i,myArray.length-1).join('>');
                    playerDataArray = playerDataArray.replace('Player Data</summary><div style=\"overflow-x:auto\">','').replace('</div></details></div','');
                    playerDataArray = playerDataArray.split('<tr style=\"min-height:22px\"><td colspan=\"15\"')[0]
                    playerDataArray = playerDataArray + '</table>';
                    playerDataArray = playerDataArray.replaceAll('<th>','<td>').replaceAll('</th>','</td>');
                    playerDataArray = playerDataArray.replaceAll('<th ','<td ').replaceAll('</th ','</td ');
                    for (let i = 0; i < 9; i++) {
	                    playerDataArray = playerDataArray.replace('<td>','<th>');
                        playerDataArray = playerDataArray.replace('</td>','</th>');
	                }
                    if(playerDataArray.includes('Items')){              
                        playerDataArray = playerDataArray.replace('<td ','<th ');
                        playerDataArray = playerDataArray.replace('</td>','</th>');
                    }
                    //playerDataArray = playerDataArray.replace('<th colspan=\"6\"  style=\"min-width:158px\">Items</th>','<th>Items</th><th>Items</th><th>Items</th><th>Items</th><th>Items</th><th>Items</th>')

                    const HtmlTableToJson = require('html-table-to-json');
                    const tabletojson = require('tabletojson').Tabletojson;
                    json2 = HtmlTableToJson.parse(playerDataArray, { useFirstRowForHeadings: true });
                    json = tabletojson.convert(playerDataArray);
                    
                    //uhtml('uhtmldata').set('playerList', json);
                    uhtml('uhtmldata').set('playerList', json);

                    function checkForItem(jsonObj,iteration,itemColumn) {
                        try {
                            console.log("hey look " + jsonObj[0][iteration][itemColumn])
                            let pass = jsonObj[0][iteration][itemColumn];
                            if (typeof pass !== undefined) {
                                jsonObj[0][iteration]["Items"] += ", " + pass;
                                delete jsonObj[0][iteration][itemColumn];
                            }
                        } catch (error) {
                            console.log('it dont exist');
                        }
                    }

                    console.log(`hey the json length is this: ${json.length}`);
                    json.forEach(element => {
                        for (let i = 0; i < element.length; i++) {
                            checkForItem(json,i,"9");
                            checkForItem(json,i,"10");
                            checkForItem(json,i,"11");
                            checkForItem(json,i,"12");
                            checkForItem(json,i,"13");
                            checkForItem(json,i,"14");
                        }
                    });
                    
                    uhtml('uhtmldata').set('playerList', json);

                    //time to remove all the undefines
                    json.forEach(element => {
                        for (let i = 0; i < element.length; i++) {
                            json[0][i]["Items"] = json[0][i]["Items"].split(", ");
                            json[0][i]["Items"] = json[0][i]["Items"].filter(e => e !== "undefined");
                        }
                    });
                    break;
                }
            }
            
            uhtml('uhtmldata').set('plHTML', playerDataArray);
            try {
                mapText = mapText.split('\r\n');
                mapText = mapText.map((e) => e.split(', '));
                mapText = mapText.map((e) => e.slice(0, -1));
                mapText.pop();
            uhtml('uhtmldata').set('lastMap', mapText);
            } catch (e) {
                error('idk');
            }
            
        }
        
		var userName = '4mat'; let title = 'BDgame';
		let htmlpageIntro = `/sendhtmlpage ${userName}, ${title}`;

		let contents = ''; 
		contents = uhtml('uhtmldata').get('lastUHTMLmessage');

		let returnStatement = `${htmlpageIntro}, ${contents}`;
        return returnStatement;
	},
    getUHTMLcontents : function(){
        let uhtml = require('origindb')('uhtml');
        return uhtml('uhtmldata').get('lastUHTMLmessage');
    },
    makeButtonsForWeapon: function(weapon, level){
        if (weapon === "cards"){
            let moveset = require('origindb')('data');
            button1 = '<button name="send" value="/msgroom groupchat-battledome-one, /me ' + moveName + ' @ TARGET">Discard</button>'
            return button1;
        }
        else {
            return "I NEED TO MAKE BUTTONS";
        }
    },
    getTOcontents : function(){
        let uhtml = require('origindb')('uhtml');
        return uhtml('uhtmldata').get('lastTurnOrder');
    },
    getClassAndWeap: function(target){
        let uhtml = require('origindb')('uhtml');
        playerList = uhtml('uhtmldata').get('playerList');
        let pass; 
        playerList.forEach(element => {
            for (let i = 0; i < element.length; i++) {
                console.log('hey listen ' + element[i]["Name"]);
                let toIDname;
                if (element[i]["Name"]){
                    toIDname = element[i]["Name"].toLowerCase().replace(/[^a-z0-9]/g, "");
                }
                if (toIDname === target.toLowerCase().replace(/[^a-z0-9]/g, "")){
                    pass = element[i]["Class/Weapon"];
                }
            }
        });
        return pass;
    },
    getPlayerPosition(){
        let uhtml = require('origindb')('uhtml');
        return uhtml('uhtmldata').get('playerPosition');
    }
}